 const path = require('path');const MonacoWebpackPlugin = require('monaco-editor-webpack-plugin')const TerserPlugin = require('terser-webpack-plugin')const { BundleAnalyzerPlugin } = require('webpack-bundle-analyzer');require('events').EventEmitter.defaultMaxListeners = 5;const resolve = dir => path.join(__dirname, dir);const needAnalyze = falsemodule.exports = {  // runtimeCompiler: true,  pages: {    index: {      entry: 'src/main.js',      template: 'public/index.html',    },    index_sub: {      entry: 'src/main_sub.js',      template: 'public/index_sub.html',    },    index_posttask: {      entry: 'src/main_posttask.js',      template: 'public/index_posttask.html',    }  },  devServer: {    hot: true,    clientLogLevel: 'warning'  },  pluginOptions: {    electronBuilder: {      builderOptions: {        productName: 'iFlyRPAStudio', // 项目名，也是生成的安装文件名，即aDemo.exe        directories: {          output: './dist'// 输出文件路径        },        win: { // win相关配置          // "icon":"./shanqis.ico",//图标，当前图标在根目录下，注意这里有两个坑          target: [            {              target: 'dir',              arch: 'ia32'            }          ],          icon: './public/icon/studioIcon.png',          requestedExecutionLevel: 'asInvoker',          extraFiles: [            {              from: './public/py/',              to: 'py'            },            {              from: './public/logo_resource/',              to: 'logo_resource'            },            {              from: './public/rpa_chrome.crx',              to: './'            },            {              from: './public/extensions/',              to: 'extensions'            },            {              from: './public/config/',              to: 'config'            },            {              from: './public/icon/arrow.jpeg',              to: './'            },            {              from: './public/config.yml',              to: 'config.yml'            },            {              from: './engine/',              to: 'engine'            },            {              from: './src/assets/static/',              to: 'static'            },          ],          fileAssociations: [{            ext: ['ifly'],            name: 'ifly File',            role: 'Editor',            icon: './public/icon/studioIcon.png'          }]        },        fileAssociations: [{          ext: ['ifly'],          name: 'ifly File',          role: 'Editor',          icon: './public/icon.ico'        }],        asar: false      },      chainWebpackMainProcess: (config) => {        config.output.filename((file) => {          if (file.chunk.name === 'index') {            return 'background.js';          }          return '[name].js'        })      },      // 解决打包成32位无法找到node-schedule的问题      externals: ['node-schedule', '@electron/remote'],      nodeModulesPath: ['../../node_modules', './node_modules']    }  },  chainWebpack: config => {    // 添加别名    config.resolve.alias      .set('@', resolve('src'))      .set('@scss', resolve('src/assets/sass'))    // 添加插件    config.plugin('monaco-editor').use(MonacoWebpackPlugin)    needAnalyze && config.plugin('webpack-bundle-analyzer').use(BundleAnalyzerPlugin)  },  configureWebpack: {    optimization: {      minimize: process.env.NODE_ENV === 'production',      minimizer: [        new TerserPlugin({ // 要引用 TerserPlugin          terserOptions: {            ecma: undefined,            warnings: false,            parse: {},            compress: {              drop_console: true,              drop_debugger: false,              pure_funcs: ['console.log'] // 移除console            }          },        }),      ],    }  },  css: {    extract: process.env.NODE_ENV === 'production',    sourceMap: false,    loaderOptions: {      scss: {        // 向全局sass样式传入共享的全局变量, $src可以配置图片cdn前缀        // 详情: https://cli.vuejs.org/guide/css.html#passing-options-to-pre-processor-loaders        prependData: `        @import "@scss/_theme.scss";        `      },      less: {        lessOptions: {          modifyVars: {            'primary-color': '#2C69FF', // 全局主色  #1890ff          },          javascriptEnabled: true,        },      }    }  },  productionSourceMap: false}